<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-lazy-init="true">

	<!-- 组件扫描 -->
	<context:component-scan base-package="com.easycodebox.example.app.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 
		继承父context的placeholder对象。因springMVC创建的context是applicationContext的子类，
		且父context的属性(PropertyPlaceholderConfigurer)在子context中是不能通过${xx}这种占位符获取到，
		所以需要在子context中重新创建一个PropertyPlaceholderConfigurer的子对象。
	 -->
	<bean parent="placeholder" />
	
	<!-- 生成JS的配置文件  -->
	<bean class="com.easycodebox.common.freemarker.FreemarkerGenerate" init-method="process" lazy-init="false"
		p:ftl-path="/config-js.ftl" p:output-path="/js/config.js" p:properties-ref="properties" />
	
	<bean class="com.easycodebox.common.web.springmvc.DefaultRequestMappingHandlerMapping"
		p:controllerPostfix="Controller">
		<property name="excludePatterns">
			<array>
				<value>/**/*.js</value>
				<value>/**/*.css</value>
				<value>/imgs/**</value>
				<value>/WEB-INF/common/**</value>
				<value>/errors/**</value>
			</array>
		</property>
	</bean>
	
	<!-- freemarker的配置 -->
	<bean id="freemarkerConfig" class="com.easycodebox.common.web.springmvc.FreeMarkerConfigurer"
		p:freemarkerVariables-ref="properties"
		p:templateLoaderPath="${freemarker.loader_path}"
		p:defaultEncoding="${freemarker.default_encoding}" />

	<!-- freemarker视图设置 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
		p:prefix="/WEB-INF/pages/" p:suffix=".html" p:order="1"
		p:contentType="text/html;charset=utf-8"
		p:viewClass="org.springframework.web.servlet.view.freemarker.FreeMarkerView"
		p:exposeRequestAttributes="true"
		p:exposeSpringMacroHelpers="true"
		p:requestContextAttribute="request" />
	
	<!-- Support static resource -->
	<mvc:default-servlet-handler />

	<!-- 文件上传 -->
	<!-- 
		maxUploadSize="32505856" ==> 上传文件大小限制为31M，31*1024*1024
	 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8"
		p:maxUploadSize="32505856"
		p:maxInMemorySize="4096" />

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.easycodebox.common.web.springmvc.StringToEnumConverterFactory" />
			</list>
		</property>
	</bean>
	<bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
		p:conversionService-ref="conversionService" />
	<!-- 在原有HandlerAdapter基础上扩展自动生成默认视图名功能 -->
	<bean class="com.easycodebox.common.web.springmvc.DefaultRequestMappingHandlerAdapter"
		p:webBindingInitializer-ref="webBindingInitializer"
		p:autoView="true">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

</beans>
