<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
       default-lazy-init="true">

    <!-- 启用Spring Cache功能 -->
    <cache:annotation-driven/>

    <!-- Redis 连接池 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.core.pool.maxTotal}"
          p:maxIdle="${redis.core.pool.maxIdle}"
          p:maxWaitMillis="${redis.core.pool.maxWaitMillis}"
          p:testOnBorrow="${redis.core.pool.testOnBorrow}"/>


    <!--
        Sentinel Mode:
            1. XML配置
            <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
                <constructor-arg name="propertySource">
                    <bean class="org.springframework.core.env.PropertiesPropertySource"
                          c:name="RedisSentinelConfiguration" c:source-ref="properties"/>
                </constructor-arg>
            </bean>
            <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
                  c:sentinelConfig-ref="redisSentinelConfiguration" c:poolConfig-ref="jedisPoolConfig"/>
            2. redis.properties文件增加配置项
                spring.redis.sentinel.master=easycode
                spring.redis.sentinel.nodes=192.168.206.130:26379,192.168.206.130:26380,192.168.206.130:26381

        Cluster Mode:
            1. XML配置
                <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
                    <constructor-arg name="propertySource">
                        <bean class="org.springframework.core.env.PropertiesPropertySource"
                              c:name="RedisClusterConfiguration" c:source-ref="properties"/>
                    </constructor-arg>
                </bean>
                <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
                      c:clusterConfig-ref="redisClusterConfiguration" c:poolConfig-ref="jedisPoolConfig"/>
            2. redis.properties文件增加配置项
                spring.redis.cluster.nodes=192.168.206.130:6379,192.168.206.130:6380,192.168.206.130:6381
                spring.redis.cluster.max-redirects=5

        注：目前Jedis版本不支持读写分离，读写都是走Master，有兴趣的朋友可以换成redisson，redisson实现了读写分离。
    -->
    <!-- Jedis ConnectionFactory -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          c:poolConfig-ref="jedisPoolConfig"
          p:hostName="${redis.core.host}"
          p:port="${redis.core.port}"/>

    <!-- JSON序列化 -->
    <bean id="jacksonRedisSerializer"
          class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnectionFactory"
          p:valueSerializer-ref="jacksonRedisSerializer"
          p:hashValueSerializer-ref="jacksonRedisSerializer"/>

    <bean id="cacheManager" class="com.easycodebox.common.cache.spring.redis.CustomRedisCacheManager"
          c:redisOperations-ref="redisTemplate"
          p:usePrefix="true"/>

    <!-- 带方法名的KeyGenerator，适用于混合存储格式 -->
    <bean id="methodArgsKeyGenerator" class="com.easycodebox.common.cache.spring.MethodArgsKeyGenerator"/>
    <!-- 适用于批量删除缓存的情况 -->
    <bean id="multiKeyGenerator" class="com.easycodebox.common.cache.spring.MultiKeyGenerator"/>

</beans>